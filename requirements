#!/usr/bin/env bash

set -e

cd $(dirname $0)
echo "Setting up the prerequisites..."
echo

install_nodejs () {
  isNodeInstalled=$(which node) && currentNodeVer=$(node -v) || echo ''
  requiredNodeVer="v14.15.5"
  # Check if Node.js is installed or if installed version is < 14.x
  if [[ "$isNodeInstalled" = "" ]] || [[ "$(printf '%s\n' "$requiredNodeVer" "$currentNodeVer" | sort -V | head -n1)" != "$requiredNodeVer" ]]; then
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
      sudo nvm install ${requiredNodeVer}
  fi
}

install_yarn () {
    isYarnInstalled=$(which yarn) && currentYarnVer=$(yarn -v) || echo ''
    requiredYarnVer="1.21.0"
    # Check if yarn is installed or if installed version is < 1.21.x
    if [[ "$isYarnInstalled" = "" ]] || [[ "$(printf '%s\n' "$requiredYarnVer" "$currentYarnVer" | sort -V | head -n1)" != "$requiredYarnVer" ]]; then
        sudo npm install -g yarn
    fi
}

case $PKG_MANAGER in
  
  *yum*)
    sudo yum install -y curl
    install_nodejs "yum"
    install_yarn
    ;;

  *apt*)
    sudo apt install -y curl
    install_nodejs "apt"
    install_yarn
    ;;

esac


# Don't run yarn build as root; if you had done, reclaim ownership for .npm and .config files
sudo chown -R $USER:$GROUP $(sudo find / -type d -name .npm 2>/dev/null)
sudo chown -R $USER:$GROUP $(sudo find / -type d -name .config 2>/dev/null)


echo "Node.js version: $(node -v)"
echo "npm version: $(npm -v)"
echo "yarn version: $(yarn -v)"